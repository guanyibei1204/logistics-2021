package com.bb.service.impl;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.bb.dto.UserDto;
import com.bb.mapper.UserMapper;
import com.bb.pojo.Role;
import com.bb.pojo.User;
import com.bb.pojo.UserExample;
import com.bb.service.IRoleService;
import com.bb.service.IUserService;

@Service
public class UserServiceImpl implements IUserService {
	
	@Resource
	private UserMapper userMapper;
	
	@Resource
	private IRoleService roleService;

	@Override
	public List<User> query() {
		UserExample example = new UserExample();
		
		return userMapper.selectByExample(example );
	}

	@Override
	public Integer addUser(User user) {
		// TODO Auto-generated method stub
		return userMapper.insertSelective(user);
	}

	@Override
	public Integer updateUser(User user) {
		// TODO Auto-generated method stub
		return userMapper.updateByPrimaryKeySelective(user);
	}

	@Override
	public Integer deleteUser(Integer id) {
		// TODO Auto-generated method stub
		return userMapper.deleteByPrimaryKey(id);
	}

	@Override
	public User queryById(Integer id) {
		// TODO Auto-generated method stub
		return userMapper.selectByPrimaryKey(id);
	}

	@Override
	public List<Role> queryRole() {
		
		return roleService.query();
	}

	/**
	 * 添加用户
	 *   及保持用户和角色的关联关系
	 */
	@Override
	public Integer saveUserAndRole(UserDto dto) {
		// 1、保持用户信息
		User user = dto.getUser();
		this.addUser(user);
		// 2.保持用户和角色的关联信息
		List<Integer> ids = dto.getRoleIds();
		if(ids !=null && ids.size() > 0){
			for (Integer roleId : ids) {
				// 保持用户和角色的关联关系
				this.saveUserIdAndRoleId(user.getUserId(),roleId);
			}
		}
		return 1;
	}

	public void saveUserIdAndRoleId(Integer userId, Integer roleId) {
		userMapper.saveUserIdAndRoleId(userId,roleId);
	}

	@Override
	public List<Role> queryRoleByUserId(Integer userId) {
		
		return roleService.queryRoleByUserId(userId);
	}

	@Override
	public UserDto getUpdateInfo(Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

}
